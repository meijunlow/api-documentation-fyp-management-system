---
swagger: "2.0"
info:
  description: "This is the documentation for the FYP Topics Selction and Management System. You can find out how to call the API and information to provide when calling the API."
  version: "1.0"
  title: "API Documentation for FYP Topics Selection and Management System"
tags:
- name: "topic"
  description: "Everything about project"
- name: "proposal"
  description: "Everything about coordinator"     
- name: "student"
  description: "Everything about student"
- name: "supervisor"
  description: "Everything about supervisor"  
- name: "coordinator"
  description: "Everything about coordinator" 
- name: "announcement"
  description: "Everything about announcement"     
schemes:
- "https"
paths:
  /create/project:  
    post:
      tags:
      - "topic"
      summary: "Create topic"
      description: ""
      operationId: "createTopic"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "List of topic object"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              project_title:
                type: "string"
              project_category:
                type: "string"
              project_description:
                type: "string"
              status:
                type: "string"
              supervisor:
                type: "string"
              difficulty:
                type: "string"
              programming_language:
                type: "array"
                items:
                  type: "string"
              session_name:
                type: "string"
      responses:
        200:
          description: "Project Created"    
  /project/{title}:
    get:
      tags:
      - "topic"
      summary: "Get topic by title"
      description: ""
      operationId: "getTopicByTitle"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "title"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                project_title:
                  type: "string"
                project_category:
                  type: "string"
                project_description:
                  type: "string"
                status:
                  type: "string"
                supervisor:
                  type: "string"
                difficulty:
                  type: "string"
                programming_language:
                  type: "array"
                  items:
                    type: "string"
                session_name:
                  type: "string"
                student_name:
                  type: "string"  
                student_email:
                  type: "string"  
        400:
          description: "Invalid title supplied"
        404:
          description: "Project not found"     
  /create/proposal:  
    post:
      tags:
      - "proposal"
      summary: "Create proposal"
      description: ""
      operationId: "createProposal"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "List of proposal object"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              project_title:
                type: "string"
              project_category:
                type: "string"
              project_description:
                type: "string"
              status:
                type: "string"
              supervisor:
                type: "string"
              difficulty:
                type: "string"
              programming_language:
                type: "array"
                items:
                  type: "string"
              session_name:
                type: "string"
      responses:
        200:
          description: "Proposal Created"    
  /proposal:
    get:
      tags:
      - "proposal"
      summary: "Get proposal details"
      description: ""
      operationId: "getProposal"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "project_title"
        in: "query"
        required: true
        type: "string"
      - name: "student_email"
        in: "query"
        required: true
        type: "string"  
      - name: "supervisor"
        in: "query"
        required: true
        type: "string"    
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                project_title:
                  type: "string"
                project_category:
                  type: "string"
                project_description:
                  type: "string"
                status:
                  type: "string"
                supervisor:
                  type: "string"
                difficulty:
                  type: "string"
                programming_language:
                  type: "array"
                  items:
                    type: "string"
                session_name:
                  type: "string"
                student_name:
                  type: "string"  
                student_email:
                  type: "string"  
        400:
          description: "Invalid title supplied"
        404:
          description: "Project not found"          
  /create/student:  
    post:
      tags:
      - "student"
      summary: "Create student"
      description: ""
      operationId: "createStudent"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "List of student object"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              student_name:
                type: "string"
              student_id:
                type: "string"
              email:
                type: "string"
              programme:
                type: "string"
              interest:
                type: "array"
                items:
                  type: "string"
              pre_requisite:
                type: "array"
                items:
                  type: "string"
      responses:
        200:
          description: "Student Created"  
  /student/{email}:
    get:
      tags:
      - "student"
      summary: "Get student by email"
      description: ""
      operationId: "getStudentByEmail"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                student_name:
                  type: "string"
                student_id:
                  type: "string"
                email:
                  type: "string"
                programme:
                  type: "string"
                project_title:
                  type: "string"  
                supervisor:
                  type: "string"  
                interest:
                  type: "array"
                  items:
                    type: "string"
                pre_requisite:
                  type: "array"
                  items:
                    type: "string"
        400:
          description: "Invalid email supplied"
        404:
          description: "Student not found"      
  /create/supervisor:  
    post:
      tags:
      - "supervisor"
      summary: "Create supervisor"
      description: ""
      operationId: "createSupervisor"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "List of supervisor object"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              name:
                type: "string"
              email:
                type: "string"
      responses:
        200:
          description: "Supervisor Created"    
  /supervisor/{email}:
    get:
      tags:
      - "supervisor"
      summary: "Get supervisor by email"
      description: ""
      operationId: "getSupervisorByEmail"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: "string"
                email:
                  type: "string"
        400:
          description: "Invalid email supplied"
        404:
          description: "Supervisor not found"  
  /create/coordinator:  
    post:
      tags:
      - "coordinator"
      summary: "Create coordinator"
      description: ""
      operationId: "createCoordinator"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "List of coordinator object"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              name:
                type: "string"
              email:
                type: "string"
      responses:
        200:
          description: "Coordinator Created"      
  /coordinator/{email}:
    get:
      tags:
      - "coordinator"
      summary: "Get coordinator by email"
      description: ""
      operationId: "getCoordinatorByEmail"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "email"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                name:
                  type: "string"
                email:
                  type: "string"
        400:
          description: "Invalid email supplied"
        404:
          description: "Coordinator not found"  
  /create/announcement:  
    post:
      tags:
      - "announcement"
      summary: "Create annnouncement"
      description: ""
      operationId: "createAnnouncement"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "List of annoucement object"
        required: true
        schema:
          type: "array"
          items:
            type: "object"
            properties:
              title:
                type: "string"
              description:
                type: "string"
      responses:
        200:
          description: "Announcement Created"      
  /announcement:
    get:
      tags:
      - "announcement"
      summary: "Get announcement by email"
      description: ""
      operationId: "getAnnouncement"
      produces:
      - "application/json"
      - "application/xml"
      responses:
        200:
          description: "successful operation"
          schema:
            type: "array"
            items:
              type: "object"
              properties:
                title:
                  type: "string"
                description:
                  type: "string"
        404:
          description: "Announcement not found"        
